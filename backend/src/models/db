-- ✅ 1. USERS TABLE
CREATE TABLE users (
  user_id SERIAL PRIMARY KEY,
  google_id VARCHAR(50),
  name VARCHAR(50) NOT NULL,
  email VARCHAR(100) UNIQUE NOT NULL,
  password_hash VARCHAR(50) NOT NULL,
  user_image TEXT default 'https://res.cloudinary.com/dwlbowgx5/image/upload/v1748358772/anyrgb.com_ebapda.png',
  phone VARCHAR(20),
  address TEXT,
  role VARCHAR(10) CHECK (role IN ('customer', 'admin')) DEFAULT 'customer',
  created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

-- ✅ 2. CATEGORIES TABLE
CREATE TABLE categories (
  category_id SERIAL PRIMARY KEY,
  name VARCHAR(50) NOT NULL
);

-- ✅ 3. PRODUCTS TABLE
CREATE TABLE products (
  product_id SERIAL PRIMARY KEY,
  name VARCHAR(50) NOT NULL,
  description TEXT,
  price DECIMAL(10,2) NOT NULL,
  team VARCHAR(20),
  image_url TEXT,
  category_id INT REFERENCES categories(category_id) ON DELETE SET NULL,
  created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP -- ❗️Fixed typo: 'creted_at' → 'created_at'
);

-- ✅ 4. PRODUCT_SIZES
CREATE TABLE product_sizes (
  product_size_id SERIAL PRIMARY KEY,
  product_id INT REFERENCES products(product_id) ON DELETE CASCADE,
  size VARCHAR(10) CHECK (size IN ('S', 'M', 'L', 'XL', 'XXL', 'XXXL')) NOT NULL,
  stock_quantity INT DEFAULT 0,
  price_override DECIMAL(10,2),
  created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

-- ✅ 5. CART
CREATE TABLE cart (
  cart_id SERIAL PRIMARY KEY,
  user_id INT UNIQUE REFERENCES users(user_id) ON DELETE CASCADE,
  created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

-- ✅ 6. CART_ITEMS
CREATE TABLE cart_items (
  cart_item_id SERIAL PRIMARY KEY,
  cart_id INT REFERENCES cart(cart_id) ON DELETE CASCADE,
  product_id INT REFERENCES products(product_id) ON DELETE CASCADE,
  quantity INT DEFAULT 1,
  size VARCHAR(10) CHECK (size IN ('S', 'M', 'L', 'XL', 'XXL', 'XXXL')) NOT NULL,
);

-- ✅ 7. FAVORITES
CREATE TABLE favorites (
  favorite_id SERIAL PRIMARY KEY,
  user_id INT REFERENCES users(user_id) ON DELETE CASCADE,
  product_id INT REFERENCES products(product_id) ON DELETE CASCADE,
  added_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

-- ✅ 8. ORDERS
CREATE TABLE orders (  
  order_id SERIAL PRIMARY KEY,
  user_id INT REFERENCES users(user_id) ON DELETE CASCADE,
  total_amount DECIMAL(10,2) NOT NULL,
  status VARCHAR(20) CHECK (status IN ('pending', 'shipped', 'delivered', 'cancelled')) DEFAULT 'pending',
  created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);  -- ❗️Missing semicolon at the end → added

-- ✅ 9. ORDER_ITEMS
CREATE TABLE order_items (
  order_item_id SERIAL PRIMARY KEY,
  order_id INT REFERENCES orders(order_id) ON DELETE CASCADE,
  product_id INT REFERENCES products(product_id) ON DELETE SET NULL,
  quantity INT NOT NULL,
  price_at_purchase DECIMAL(10,2) NOT NULL,
  size VARCHAR(10) CHECK (size IN ('S', 'M', 'L', 'XL', 'XXL', 'XXXL')) NOT NULL,
);

-- ✅ 10. PAYMENTS
CREATE TABLE payments (
  payment_id SERIAL PRIMARY KEY,
  order_id INT REFERENCES orders(order_id) ON DELETE CASCADE,
  method VARCHAR(50) NOT NULL,
  status VARCHAR(10) CHECK (status IN ('paid', 'failed', 'pending')) DEFAULT 'pending',
  paid_at TIMESTAMP
);

-- ✅ 11. SHIPMENTS
CREATE TABLE shipments (
  shipment_id SERIAL PRIMARY KEY,
  order_id INT REFERENCES orders(order_id) ON DELETE CASCADE,
  tracking_number VARCHAR(100),
  courier VARCHAR(100),
  shipped_at TIMESTAMP,
  delivered_at TIMESTAMP
);

-- ✅ 12. NOTIFICATIONS
CREATE TABLE notifications (
  notification_id SERIAL PRIMARY KEY,
  message TEXT,
  created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);